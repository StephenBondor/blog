{"version":3,"sources":["webpack:///path---validating-forms-in-react-native-c9e2bc13d5f62f169809.js","webpack:///./.cache/json/validating-forms-in-react-native.json"],"names":["webpackJsonp","358","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","excerpt","frontmatter","date","path","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,YAAAC,OAAA,cAA0CC,gBAAmBC,GAAA,+IAAAC,KAAA,8mnBAAg2oBC,QAAA,oUAAAC,aAAkeN,MAAA,mCAAAO,KAAA,qBAAAC,KAAA,uCAAoHC","file":"path---validating-forms-in-react-native-c9e2bc13d5f62f169809.js","sourcesContent":["webpackJsonp([94670357537178],{\n\n/***/ 358:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Pav Sidhu\",\"author\":\"Pav Sidhu\"}},\"markdownRemark\":{\"id\":\"/Users/bondor/Desktop/Lambda/Projects/blog/src/pages/2017-02-12-validating-forms-in-react-native/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>As I’m in the midst of building a React Native app for my exam studying tool, <a href=\\\"http://revisify.com\\\">Revisify</a>, I needed to find an elegant solution to validating forms. One of my favourite advantages of using React Native is that there are plenty of Javascript libraries already out there to help speed up your development, one of them being <a href=\\\"http://validatejs.org\\\">validate.js</a>, which helps you to… validate your forms!</p>\\n<h2>How Validate.js Works</h2>\\n<p>Validate.js requires you to have a variable to hold your field validation rules such as presence checks, length checks etc. You can also create async and custom validators. Here is a basic example of what your rules could look like.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> validation <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  email<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    presence<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      message<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'^Please enter an email address'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    email<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      message<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'^Please enter a valid email address'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n  password<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    presence<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      message<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'^Please enter a password'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    length<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      minimum<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n      message<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'^Your password must be at least 5 characters'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> validation\\n</code></pre>\\n      </div>\\n<p>The structure is pretty self-explanatory other than you may have noticed that for all the error messages, I put <code class=\\\"language-text\\\">^</code> before them. The reason for this is because for some reason when you validate a field and there is an error, the error message will return the field name and the error message together such as Password Your password must be at least 5 characters. It’s a bit odd as to why this happens but my regex solution removes the field name from the error message.</p>\\n<h2>My Wrapper to Validate Fields</h2>\\n<p>I created a wrapper since I found that I would reuse a lot of the code between different forms. The function below takes the field name and its value and return the error message if there is one.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> validation <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'validation.js'</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span>fieldName<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Validate.js validates your values as an object</span>\\n  <span class=\\\"token comment\\\">// e.g. var form = {email: 'email@example.com'}</span>\\n  <span class=\\\"token comment\\\">// Line 8-9 creates an object based on the field name and field value</span>\\n  <span class=\\\"token keyword\\\">var</span> formValues <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n  formValues<span class=\\\"token punctuation\\\">[</span>fieldName<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> value\\n\\n  <span class=\\\"token comment\\\">// Line 13-14 creates an temporary form with the validation fields</span>\\n  <span class=\\\"token comment\\\">// e.g. var formFields = {</span>\\n  <span class=\\\"token comment\\\">//                        email: {</span>\\n  <span class=\\\"token comment\\\">//                         presence: {</span>\\n  <span class=\\\"token comment\\\">//                          message: 'Email is blank'</span>\\n  <span class=\\\"token comment\\\">//                         }</span>\\n  <span class=\\\"token comment\\\">//                       }</span>\\n  <span class=\\\"token keyword\\\">var</span> formFields <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n  formFields<span class=\\\"token punctuation\\\">[</span>fieldName<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> validation<span class=\\\"token punctuation\\\">[</span>field<span class=\\\"token punctuation\\\">]</span>\\n\\n  <span class=\\\"token comment\\\">// The formValues and validated against the formFields</span>\\n  <span class=\\\"token comment\\\">// the variable result hold the error messages of the field</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">validatejs</span><span class=\\\"token punctuation\\\">(</span>formValues<span class=\\\"token punctuation\\\">,</span> formFields<span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\">// If there is an error message, return it!</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// Return only the field error message if there are multiple</span>\\n    <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">[</span>field<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2>My Custom TextInput Component</h2>\\n<p>Since I want every single TextInput to have validation, it would make sense to create a custom component which contained a TextInput and an error message. Here is a stripped down version:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> View<span class=\\\"token punctuation\\\">,</span> TextInput<span class=\\\"token punctuation\\\">,</span> Text <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-native'</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">TextField</span> <span class=\\\"token operator\\\">=</span> props <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token operator\\\">&lt;</span>View<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>TextInput <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    props<span class=\\\"token punctuation\\\">.</span>error <span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">&lt;</span>Text<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>props<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Text<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span>\\n  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>View<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> TextField\\n</code></pre>\\n      </div>\\n<h2>An Example Form</h2>\\n<p>The example below demonstrates how I validate forms in practice. I keep all the TextField values and error messages in the state. Every time the TextField is blurred, the value entered is validated and the error message in the state is updated.</p>\\n<p>When the button to send off the form is pressed, it calls a function to validate all the fields. If there are no errors, then the form can be submitted.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> View<span class=\\\"token punctuation\\\">,</span> Button <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-native'</span>\\n\\n<span class=\\\"token keyword\\\">import</span> TextField <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'textfield'</span>\\n<span class=\\\"token keyword\\\">import</span> validation <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'validation'</span>\\n<span class=\\\"token keyword\\\">import</span> validate <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'validation_wrapper'</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Form</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      email<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      emailError<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      password<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      passwordError<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">register</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> emailError <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'email'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>email<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">const</span> passwordError <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'password'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>password<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      emailError<span class=\\\"token punctuation\\\">:</span> emailError<span class=\\\"token punctuation\\\">,</span>\\n      passwordError<span class=\\\"token punctuation\\\">:</span> passwordError<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>emailError <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token operator\\\">!</span>passwordError<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Details are valid!'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>View<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>TextField\\n          onChangeText<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>value <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> email<span class=\\\"token punctuation\\\">:</span> value<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trim</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n          onBlur<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n              emailError<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'email'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>email<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n          error<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>emailError<span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n\\n        <span class=\\\"token operator\\\">&lt;</span>TextField\\n          onChangeText<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>value <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> password<span class=\\\"token punctuation\\\">:</span> value<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trim</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n          onBlur<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n              passwordError<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'password'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>password<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n          error<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>passwordError<span class=\\\"token punctuation\\\">}</span>\\n          secureTextEntry<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n\\n        <span class=\\\"token operator\\\">&lt;</span>Button title<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Register\\\"</span> onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>validateRegister<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>View<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>There you have it! That’s how I validate forms using React Native, I hope this helped.</p>\",\"excerpt\":\"As I’m in the midst of building a React Native app for my exam studying tool,  Revisify , I needed to find an elegant solution to validating forms. One of my favourite advantages of using React Native is that there are plenty of Javascript libraries already out there to help speed up your development, one of them being…\",\"frontmatter\":{\"title\":\"Validating Forms in React Native\",\"date\":\"12th February 2017\",\"path\":\"/validating-forms-in-react-native\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---validating-forms-in-react-native-c9e2bc13d5f62f169809.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Pav Sidhu\",\"author\":\"Pav Sidhu\"}},\"markdownRemark\":{\"id\":\"/Users/bondor/Desktop/Lambda/Projects/blog/src/pages/2017-02-12-validating-forms-in-react-native/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>As I’m in the midst of building a React Native app for my exam studying tool, <a href=\\\"http://revisify.com\\\">Revisify</a>, I needed to find an elegant solution to validating forms. One of my favourite advantages of using React Native is that there are plenty of Javascript libraries already out there to help speed up your development, one of them being <a href=\\\"http://validatejs.org\\\">validate.js</a>, which helps you to… validate your forms!</p>\\n<h2>How Validate.js Works</h2>\\n<p>Validate.js requires you to have a variable to hold your field validation rules such as presence checks, length checks etc. You can also create async and custom validators. Here is a basic example of what your rules could look like.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> validation <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  email<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    presence<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      message<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'^Please enter an email address'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    email<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      message<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'^Please enter a valid email address'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n  password<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    presence<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      message<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'^Please enter a password'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    length<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      minimum<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n      message<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'^Your password must be at least 5 characters'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> validation\\n</code></pre>\\n      </div>\\n<p>The structure is pretty self-explanatory other than you may have noticed that for all the error messages, I put <code class=\\\"language-text\\\">^</code> before them. The reason for this is because for some reason when you validate a field and there is an error, the error message will return the field name and the error message together such as Password Your password must be at least 5 characters. It’s a bit odd as to why this happens but my regex solution removes the field name from the error message.</p>\\n<h2>My Wrapper to Validate Fields</h2>\\n<p>I created a wrapper since I found that I would reuse a lot of the code between different forms. The function below takes the field name and its value and return the error message if there is one.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> validation <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'validation.js'</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span>fieldName<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Validate.js validates your values as an object</span>\\n  <span class=\\\"token comment\\\">// e.g. var form = {email: 'email@example.com'}</span>\\n  <span class=\\\"token comment\\\">// Line 8-9 creates an object based on the field name and field value</span>\\n  <span class=\\\"token keyword\\\">var</span> formValues <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n  formValues<span class=\\\"token punctuation\\\">[</span>fieldName<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> value\\n\\n  <span class=\\\"token comment\\\">// Line 13-14 creates an temporary form with the validation fields</span>\\n  <span class=\\\"token comment\\\">// e.g. var formFields = {</span>\\n  <span class=\\\"token comment\\\">//                        email: {</span>\\n  <span class=\\\"token comment\\\">//                         presence: {</span>\\n  <span class=\\\"token comment\\\">//                          message: 'Email is blank'</span>\\n  <span class=\\\"token comment\\\">//                         }</span>\\n  <span class=\\\"token comment\\\">//                       }</span>\\n  <span class=\\\"token keyword\\\">var</span> formFields <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n  formFields<span class=\\\"token punctuation\\\">[</span>fieldName<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> validation<span class=\\\"token punctuation\\\">[</span>field<span class=\\\"token punctuation\\\">]</span>\\n\\n  <span class=\\\"token comment\\\">// The formValues and validated against the formFields</span>\\n  <span class=\\\"token comment\\\">// the variable result hold the error messages of the field</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">validatejs</span><span class=\\\"token punctuation\\\">(</span>formValues<span class=\\\"token punctuation\\\">,</span> formFields<span class=\\\"token punctuation\\\">)</span>\\n\\n  <span class=\\\"token comment\\\">// If there is an error message, return it!</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// Return only the field error message if there are multiple</span>\\n    <span class=\\\"token keyword\\\">return</span> result<span class=\\\"token punctuation\\\">[</span>field<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2>My Custom TextInput Component</h2>\\n<p>Since I want every single TextInput to have validation, it would make sense to create a custom component which contained a TextInput and an error message. Here is a stripped down version:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> View<span class=\\\"token punctuation\\\">,</span> TextInput<span class=\\\"token punctuation\\\">,</span> Text <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-native'</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">TextField</span> <span class=\\\"token operator\\\">=</span> props <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token operator\\\">&lt;</span>View<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>TextInput <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    props<span class=\\\"token punctuation\\\">.</span>error <span class=\\\"token operator\\\">?</span> <span class=\\\"token operator\\\">&lt;</span>Text<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>props<span class=\\\"token punctuation\\\">.</span>error<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Text<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">null</span>\\n  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>View<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> TextField\\n</code></pre>\\n      </div>\\n<h2>An Example Form</h2>\\n<p>The example below demonstrates how I validate forms in practice. I keep all the TextField values and error messages in the state. Every time the TextField is blurred, the value entered is validated and the error message in the state is updated.</p>\\n<p>When the button to send off the form is pressed, it calls a function to validate all the fields. If there are no errors, then the form can be submitted.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> View<span class=\\\"token punctuation\\\">,</span> Button <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-native'</span>\\n\\n<span class=\\\"token keyword\\\">import</span> TextField <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'textfield'</span>\\n<span class=\\\"token keyword\\\">import</span> validation <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'validation'</span>\\n<span class=\\\"token keyword\\\">import</span> validate <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'validation_wrapper'</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Form</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      email<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      emailError<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      password<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      passwordError<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">register</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> emailError <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'email'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>email<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">const</span> passwordError <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'password'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>password<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      emailError<span class=\\\"token punctuation\\\">:</span> emailError<span class=\\\"token punctuation\\\">,</span>\\n      passwordError<span class=\\\"token punctuation\\\">:</span> passwordError<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>emailError <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token operator\\\">!</span>passwordError<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Details are valid!'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>View<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>TextField\\n          onChangeText<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>value <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> email<span class=\\\"token punctuation\\\">:</span> value<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trim</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n          onBlur<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n              emailError<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'email'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>email<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n          error<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>emailError<span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n\\n        <span class=\\\"token operator\\\">&lt;</span>TextField\\n          onChangeText<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>value <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> password<span class=\\\"token punctuation\\\">:</span> value<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trim</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n          onBlur<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n              passwordError<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'password'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>password<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n          error<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>passwordError<span class=\\\"token punctuation\\\">}</span>\\n          secureTextEntry<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n\\n        <span class=\\\"token operator\\\">&lt;</span>Button title<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Register\\\"</span> onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>validateRegister<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>View<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>There you have it! That’s how I validate forms using React Native, I hope this helped.</p>\",\"excerpt\":\"As I’m in the midst of building a React Native app for my exam studying tool,  Revisify , I needed to find an elegant solution to validating forms. One of my favourite advantages of using React Native is that there are plenty of Javascript libraries already out there to help speed up your development, one of them being…\",\"frontmatter\":{\"title\":\"Validating Forms in React Native\",\"date\":\"12th February 2017\",\"path\":\"/validating-forms-in-react-native\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/validating-forms-in-react-native.json\n// module id = 358\n// module chunks = 94670357537178"],"sourceRoot":""}